<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>first_upload</title>
    <url>/2020/04/02/demo/</url>
    <content><![CDATA[<p>$$sqrt{a}$$ </p>
<p> some   <strong>s</strong>  jiuzai </p>
<p>$$<br>J_\alpha(x) = \sum_{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha} \text {，行内公式示例}<br>$$</p>
<hr>
<p>something</p>
<hr>
<p><img src="/2020/04/02/demo/a.jpg" alt="hh"></p>
]]></content>
      <categories>
        <category>demo</category>
      </categories>
      <tags>
        <tag>demo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 学习</title>
    <url>/2020/04/06/start/</url>
    <content><![CDATA[<h1 id="Markdown-语法学习"><a href="#Markdown-语法学习" class="headerlink" title="Markdown 语法学习"></a><strong>Markdown</strong> 语法学习</h1><h2 id="1-分级标题"><a href="#1-分级标题" class="headerlink" title="1. 分级标题"></a>1. 分级标题</h2><hr>
<pre><code># 一级标题</code></pre><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题  "></a>六级标题  <!-- 最多六级标题 --></h6><blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题  &lt;!--最多6级标题--&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<a id="more"></a>
<h2 id="2-任务列表"><a href="#2-任务列表" class="headerlink" title="2. 任务列表"></a>2. 任务列表</h2><ul>
<li><input disabled type="checkbox"> 任务一 未作任务 <code>- + 空格 + []</code> </li>
<li><input checked disabled type="checkbox"> 任务二 已做任务 <code>- + 空格 + [x]</code></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] 任务一 未做任务 <span class="code">`- + 空格 + [ ]`</span></span><br><span class="line"><span class="bullet">- </span>[x] 任务二 已做任务 <span class="code">`- + 空格 + [x]`</span></span><br></pre></td></tr></table></figure>

<h2 id="3-画图-HEXO-不支持！！！"><a href="#3-画图-HEXO-不支持！！！" class="headerlink" title="3.画图(HEXO 不支持！！！)"></a>3.画图(HEXO 不支持！！！)</h2><div id="flowchart-0" class="flow-chart"></div>


<pre class="mermaid">gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d</pre>





<pre class="mermaid">graph TD
A[Hard] -->|Text| B(Round)
B --> C{Decision}
C -->|One| D[Result 1]
C -->|Two| E[Result 2]</pre>



<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: begin
en=>end: end
op=>operation: process
cond=>condition: Yes or No?

st->op->cond
cond(yes)->en
cond(no)->op</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown中的LaTeX格式</title>
    <url>/2020/04/07/a/</url>
    <content><![CDATA[<h3 id="Markdown中的LaTeX格式"><a href="#Markdown中的LaTeX格式" class="headerlink" title="Markdown中的LaTeX格式"></a>Markdown中的LaTeX格式</h3><p>大部分情况下，我对于latex的数学公式都是内嵌于Markdown文本编辑器中的，分为两种形式</p>
<ol>
<li>行内公式排版：</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ c = \sqrt&#123;a^&#123;<span class="number">2</span>&#125;+b<span class="number">_</span>&#123;<span class="number">0</span>&#125;^&#123;<span class="number">2</span>&#125;+e^&#123;x&#125;&#125; $</span><br></pre></td></tr></table></figure>

<p>$ c = \sqrt{a^{2}+b_{0}^{2}+e^{x}} $</p>
<ol>
<li>块公式排版： <a id="more"></a></li>
</ol>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$ c = \sqrt&#123;a^&#123;<span class="number">2</span>&#125;+b<span class="number">_</span>&#123;<span class="number">0</span>&#125;^&#123;<span class="number">2</span>&#125; +e^&#123;x&#125;&#125; $$</span><br></pre></td></tr></table></figure>

<p>$$ c = \sqrt{a^{2}+b_{0}^{2} +e^{x}} $$</p>
<h3 id="LaTex的数学公式基本规则"><a href="#LaTex的数学公式基本规则" class="headerlink" title="LaTex的数学公式基本规则"></a>LaTex的数学公式基本规则</h3><ol>
<li>转义</li>
</ol>
<blockquote>
<p>以下几个字符: # $ % &amp; ~ _ ^ \ { }有特殊意义，需要表示这些字符时，需要转义，即在每个字符前加上\（转义字符的具体含义下面会解释）</p>
<p><img src="/2020/04/07/a/9368615-bcfa93bf4f7c82e8.webp" alt="img"></p>
<p>image.png</p>
<p>不知为何简书不支持~的表示，需要时写作\sim</p>
</blockquote>
<blockquote>
<p>\boxed命令给公式加一个方框。\fbox具有类似功能<br> \mathbf将字体加粗<br> \boldsymbol将字体斜体且加粗</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$E = mc^<span class="number">2</span> $</span><br><span class="line">$ \boxed&#123;E=mc^<span class="number">2</span>&#125; $</span><br><span class="line">$\fbox&#123;E=mc^<span class="number">2</span>&#125;$</span><br><span class="line">$\mathbf&#123;E = mc^<span class="number">2</span>&#125;$</span><br><span class="line">$\boldsymbol&#123;E = mc^<span class="number">2</span>&#125;$</span><br></pre></td></tr></table></figure>

<p>$E = mc^2 $<br>$ \boxed{E=mc^2} $<br>$\fbox{E=mc^2}$<br>$\mathbf{E = mc^2}$<br>$\boldsymbol{E = mc^2}$</p>
<ol>
<li>希腊字母与特殊字符</li>
</ol>
<p><img src="/2020/04/07/a/9368615-49868ef8c5950cf3.webp" alt="img"></p>
<p>image.png</p>
<p><img src="/2020/04/07/a/9368615-3d2020da2a5cfd58.webp" alt="img"></p>
<p>image.png</p>
<p><img src="/2020/04/07/a/9368615-7fcbdefb396ba056.webp" alt="img"></p>
<p>image.png</p>
<ol>
<li>上下标及常用符号</li>
</ol>
<blockquote>
<p>用^来表示上标<br> 用_来表示下标<br> 根号用\sqrt表示</p>
</blockquote>
<p>注意：这些有特殊含义的表示中（不限于这三种内容），如果超过一个字符或符号，需要用{}括起来。</p>
<p>对角标的使用中，如果角标位置看起来不明显时，可以强制改变角标大小或层次，如下所示：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$y_N, y<span class="number">_</span>&#123;_N&#125;,$</span><br></pre></td></tr></table></figure>

<p>显示为：<br> <img src="https://math.jianshu.com/math?formula=y_N%2C%20y_%7B_N%7D%2C" alt="y_N, y_{_N},"></p>
<p>第一种输出为正常输出，但输出效果不明显；第二种是将一级角标改为二级角标，字体也自动变为二级角标字体</p>
<p>当需要在左右两边都有上下标，可以用 \sideset 命令</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$ \sideset&#123;^<span class="number">1_2</span>&#125;&#123;^<span class="number">3_4</span>&#125;\bigotimes $$</span><br></pre></td></tr></table></figure>

<p>$$ \sideset{^1_2}{^3_4}\bigotimes $$</p>
<p>\sqrt[开方次数，默认为2]{开方公式}， 例如：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">$$ x_&#123;k&#125;^<span class="number">2</span>\quad \<span class="built_in">sqrt</span>&#123;x&#125;\quad \<span class="built_in">sqrt</span>[<span class="number">3</span>]&#123;x+y&#125; $$</span><br></pre></td></tr></table></figure>

<p>$$ x_{k}^2\quad \sqrt{x}\quad \sqrt[3]{x+y} $$</p>
<blockquote>
<p>公式中插入文本\text{}或\mbox{}，建议使用前者，它对于latex内置的\mbox{}的优势在于它可以根据当前位置自动调整文本样式（尤其是大小），而\mbox采用统一的正文样式。这一点在你的文本被用作上下标的时候非常重要。</p>
</blockquote>
<blockquote>
<p>公式中插入空格，间隔效果如下表：</p>
</blockquote>
<p><img src="/2020/04/07/a/9368615-2051eb8ef8627902.webp" alt="img"></p>
<p>image.png</p>
<blockquote>
<p>若需要显示更大或更小的字符，在符号前插入 \large 或 \small 命令</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$A\large  A  \small A$</span><br></pre></td></tr></table></figure>

<p>$A\large  A  \small A$</p>
<blockquote>
<p>省略号\dots, \cdots,\vdots \ddots表示，\cdot常表示点乘，\vots是竖直方向的，\ddots是斜线方向的</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$ x_1, x_2, \dots, x_n\quad <span class="number">1</span>,<span class="number">2</span>,\cdots,n\quad \vdots\quad \ddots $$</span><br></pre></td></tr></table></figure>

<p>$$ x_1, x_2, \dots, x_n\quad 1,2,\cdots,n\quad \vdots\quad \ddots $$</p>
<blockquote>
<p>关系符如下表所示</p>
</blockquote>
<p><img src="/2020/04/07/a/9368615-0fa226838bae9ea4.webp" alt="img"></p>
<p>image.png</p>
<blockquote>
<p>其他常用符号</p>
</blockquote>
<p><img src="/2020/04/07/a/9368615-2ac87b614fed0f3f.webp" alt="img"></p>
<p>image.png</p>
<ol>
<li>分数与组合数</li>
</ol>
<blockquote>
<p>分数用\frac{分子}{分母}表示，\cfrac用于连分数表示(这样相较于\frac不会产生字体自动缩小的问题)</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$x = a <span class="number">_</span> <span class="number">0</span> + \cfrac &#123;<span class="number">1</span>&#125; &#123;a <span class="number">_</span> <span class="number">1</span></span><br><span class="line">          + \cfrac &#123;<span class="number">1</span>&#125; &#123;a <span class="number">_</span> <span class="number">2</span></span><br><span class="line">          + \cfrac &#123;<span class="number">1</span>&#125; &#123;a <span class="number">_</span> <span class="number">3</span> + \cfrac &#123;<span class="number">1</span>&#125; &#123;a <span class="number">_</span> <span class="number">4</span>&#125; &#125; &#125; &#125; </span><br><span class="line">$</span><br></pre></td></tr></table></figure>

<p>$x = a _ 0 + \cfrac {1} {a _ 1<br>          + \cfrac {1} {a _ 2<br>                    + \cfrac {1} {a _ 3 + \cfrac {1} {a _ 4} } } }<br>$</p>
<p>字号工具环境设置：<br> \dfrac命令把字号设置为独立公式中的大小；<br> \tfrac则把字号设置为行间公式中的大小。</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \frac&#123;<span class="number">1</span>&#125;&#123;<span class="number">2</span>&#125; \dfrac&#123;<span class="number">1</span>&#125;&#123;<span class="number">2</span>&#125; $</span><br></pre></td></tr></table></figure>

<p>$ \frac{1}{2} \dfrac{1}{2} $ </p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$ \frac&#123;<span class="number">1</span>&#125;&#123;<span class="number">2</span>&#125; \tfrac&#123;<span class="number">1</span>&#125;&#123;<span class="number">2</span>&#125; $$</span><br></pre></td></tr></table></figure>

<p>$$ \frac{1}{2} \tfrac{1}{2} $$</p>
<blockquote>
<p>组合数用法与分数类似，在命令前加d和t也能达到分数字号设置同样的功能</p>
</blockquote>
<p>\binom{233}{x^2} </p>
<p>$$\binom{233}{x^2}$$</p>
<ol>
<li>运算符</li>
</ol>
<blockquote>
<p>基本加减乘除等于 +-*/= 可以直接输入<br> 特殊运算则用以下特殊命令\pm; \times; \div; \cdot; \cap; \cup; \geq; \leq; \neq; \approx; \equiv<br>$$\pm; \times; \div; \cdot; \cap; \cup; \geq; \leq; \neq; \approx; \equiv$$<br> 在此之上，如果想要使用堆积符号有以下三种形式</p>
</blockquote>
<ul>
<li>\stackrel{上位符号}{基位符号} 基位符号大，上位符号小</li>
<li>{上位公式\atop 下位公式} 上下符号一样大</li>
<li>{上位公式\choose 下位公式} 上下符号一样大；上下符号被包括在圆弧内</li>
</ul>
<p>$$\stackrel{上位符号}{基位符号} 基位符号大，上位符号小{上位公式\atop 下位公式} 上下符号一样大{上位公式\choose 下位公式} 上下符号一样大；上下符号被包括在圆弧内$$</p>
<blockquote>
<p>和、积、极限、积分等运算符用\sum, \prod, \lim, \int,这些公式在行内公式被压缩，以适应行高，可以通过\limits和\nolimits命令其是否压缩。<br>$$  和、积、极限、积分等运算符用\sum, \prod, \lim, \int,这些公式在行内公式被压缩，以适应行高，可以通过 和命令其是否压缩。$$</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \sum<span class="number">_</span>&#123;i=<span class="number">1</span>&#125;^n i $</span><br><span class="line"></span><br><span class="line">$ \prod<span class="number">_</span>&#123;i=<span class="number">1</span>&#125;^n i$</span><br><span class="line"></span><br><span class="line">$\lim<span class="number">_</span>&#123;x\to<span class="number">0</span>&#125;x^<span class="number">2</span> $</span><br><span class="line"></span><br><span class="line">$\int<span class="number">_</span>&#123;a&#125;^&#123;b&#125;x^<span class="number">2</span> dx $</span><br><span class="line"></span><br><span class="line">$\sum\nolimits<span class="number">_</span>&#123;i=<span class="number">1</span>&#125;^n i \quad\prod\nolimits<span class="number">_</span>&#123;i=<span class="number">1</span>&#125;^n i</span><br><span class="line">\quad</span><br><span class="line">\lim\nolimits<span class="number">_</span>&#123;x\to<span class="number">0</span>&#125;x^<span class="number">2</span> \quad\int\limits<span class="number">_</span>&#123;a&#125;^&#123;b&#125;x^<span class="number">2</span> dx </span><br><span class="line">$</span><br></pre></td></tr></table></figure>

<p>$ \sum_{i=1}^n i $</p>
<p>$ \prod_{i=1}^n i$</p>
<p>$\lim_{x\to0}x^2 $</p>
<p>$\int_{a}^{b}x^2 dx $</p>
<p>$\sum\nolimits_{i=1}^n i \quad\prod\nolimits_{i=1}^n i<br>\quad<br>\lim\nolimits_{x\to0}x^2 \quad\int\limits_{a}^{b}x^2 dx<br>$</p>
<ol>
<li>积分及箭头</li>
</ol>
<blockquote>
<p>积分符号使用如下形式：\int、\iint、\iiint、\iiiint、\idotsint</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">$$ \<span class="keyword">int</span> \<span class="keyword">int</span> \quad \<span class="keyword">int</span> \<span class="keyword">int</span> \<span class="keyword">int</span> \quad </span><br><span class="line"> \<span class="keyword">int</span> \<span class="keyword">int</span> \<span class="keyword">int</span> \<span class="keyword">int</span> \quad \<span class="keyword">int</span> \dots（表示...） \<span class="keyword">int</span> $$</span><br><span class="line"></span><br><span class="line">$$ \iint \quad \iiint \quad \iiiint \quad \idotsint $$</span><br></pre></td></tr></table></figure>

<p>$$ \int \int \quad \int \int \int \quad<br> \int \int \int \int \quad \int \dots（表示…） \int $$</p>
<p>$$ \iint \quad \iiint \quad \iiiint \quad \idotsint $$</p>
<blockquote>
<p>箭头的种类过于繁多，这里不就一一列举了，但是箭头符号的名字很有规律，一般命名规则为方向+箭头种类：</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">代码</th>
<th align="center">显示</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\leftarrow 或 \gets</td>
<td align="center"><img src="https://math.jianshu.com/math?formula=%5Cgets" alt="\gets"></td>
</tr>
<tr>
<td align="center">\rightarrow 或 \to</td>
<td align="center"><img src="https://math.jianshu.com/math?formula=%5C%2C%5Cto" alt="\,\to"></td>
</tr>
<tr>
<td align="center">\uparrow</td>
<td align="center"><img src="https://math.jianshu.com/math?formula=%5Cuparrow" alt="\uparrow"></td>
</tr>
<tr>
<td align="center">\downarrow</td>
<td align="center"><img src="https://math.jianshu.com/math?formula=%5Cdownarrow" alt="\downarrow"></td>
</tr>
</tbody></table>
<blockquote>
<blockquote>
<p>四个基本方向上下左右不多说，斜着的箭头的方向部分为\ne \se \nw \sw，为东北、东南、西北、西南简写<br> 示例：\nearrow <img src="https://math.jianshu.com/math?formula=%5Cnearrow" alt="\nearrow"></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>还有左右、上下两个方向的箭头：<br> \leftrightarrow   <img src="https://math.jianshu.com/math?formula=%5Cleftrightarrow" alt="\leftrightarrow"><br> \updownarrow  <img src="https://math.jianshu.com/math?formula=%5Cupdownarrow" alt="\updownarrow"></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>上面的箭头只有一根线，可以通过大写第一个字母变成双线：<br> \Leftrightarrow  <img src="https://math.jianshu.com/math?formula=%5CLeftrightarrow" alt="\Leftrightarrow"><br> \Uparrow  <img src="https://math.jianshu.com/math?formula=%5CUparrow" alt="\Uparrow"></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>在前面加上long可以把箭头变长，仅适用于左右箭头，注意双线箭头大写字母的位置：<br> \longleftarrow  <img src="https://math.jianshu.com/math?formula=%5Clongleftarrow" alt="\longleftarrow"><br> \longleftrightarrow  <img src="https://math.jianshu.com/math?formula=%5Clongleftrightarrow" alt="\longleftrightarrow"><br> \Longleftrightarrow 或 \iff <img src="https://math.jianshu.com/math?formula=%5Ciff" alt="\iff"></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>还有只有一边的箭头，名字为harpoon+up/down，表示那一边的位置，这种箭头似乎不支持上面的buff buffbuff，但拥有左右双向箭头：<br> \leftharpoonup  <img src="https://math.jianshu.com/math?formula=%5Cleftharpoonup" alt="\leftharpoonup"><br> \rightleftharpoons  <img src="https://math.jianshu.com/math?formula=%5Crightleftharpoons" alt="\rightleftharpoons"></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>意图在箭头上下位置添加说明时，有以下两种方式</p>
</blockquote>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>.\xleftarrow和\xrightarrow可根据内容自动调整（上下都可以添加内容）</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.\overset&#123;&#125;&#123;\rightarrow&#125;则是长度固定的箭头，适合单个字符，内容在上</span><br><span class="line">  \overrightarrow&#123;&#125;则是长度变化的箭头，适合多个字符，箭头在上</span><br><span class="line">注意<span class="number">2</span>中的都只适用于只在箭头上或下添加内容，改变位置将over改为under</span><br><span class="line"></span><br><span class="line">$\xleftarrow[x+y+z]&#123;x+y+z+<span class="number">1</span>&#125;$</span><br><span class="line"></span><br><span class="line">$\xrightarrow[x+y+z+<span class="number">1</span>]&#123;x+y+z&#125;$</span><br><span class="line"></span><br><span class="line">$\overset&#123;x+y+z&#125;&#123;\rightarrow&#125;$</span><br><span class="line"></span><br><span class="line"> $\underrightarrow&#123;x+y+z&#125;$</span><br><span class="line"></span><br><span class="line">$\underset&#123;x+y+z&#125;&#123;\leftarrow&#125;$</span><br><span class="line"></span><br><span class="line"> $\overleftarrow&#123;x+y+z&#125;$</span><br></pre></td></tr></table></figure>

<p>$\xleftarrow[x+y+z]{x+y+z+1}$</p>
<p>$\xrightarrow[x+y+z+1]{x+y+z}$</p>
<p>$\overset{x+y+z}{\rightarrow}$</p>
<p> $\underrightarrow{x+y+z}$</p>
<p>$\underset{x+y+z}{\leftarrow}$</p>
<p> $\overleftarrow{x+y+z}$</p>
<ol>
<li>注音和标注</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">字母上方横线\overline&#123;&#125;, \bar&#123;&#125;</span><br><span class="line">$ \bar&#123;x&#125; $ 单个字符 </span><br><span class="line">$\overline&#123;xyz&#125;$ 多个字符</span><br></pre></td></tr></table></figure>

<p>$ \bar{x} $ 单个字符<br>$\overline{xyz}$ 多个字符</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">字母下方横线\underline&#123;&#125;</span><br><span class="line">$\underline&#123;xyz&#125;$</span><br></pre></td></tr></table></figure>

<p>$\underline{xyz}$</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">\overbrace 和\underbrace 在表达式的上、下方给出一水平的大括号</span><br><span class="line">$\overbrace&#123;a\dots a&#125;^&#123;n个&#125;$ </span><br><span class="line">$\underbrace&#123;a\dots a&#125;<span class="number">_</span>&#123;n个&#125;$</span><br></pre></td></tr></table></figure>

<p>$\overbrace{a\dots a}^{n个}$<br>$\underbrace{a\dots a}_{n个}$</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">向量表示有两种，单个字母用\vec&#123;x&#125;，多个字母用\overrightarrow 和\overleftarrow</span><br><span class="line">$ \vec&#123;x&#125;$</span><br><span class="line">$\overrightarrow&#123;AB&#125;$</span><br><span class="line">$\overleftarrow&#123;ABC&#125;$</span><br></pre></td></tr></table></figure>

<p>$ \vec{x}$<br>$\overrightarrow{AB}$<br>$\overleftarrow{ABC}$</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">字母上方波浪线\tilde&#123;&#125;, \widetilde&#123;&#125;</span><br><span class="line">$ \tilde&#123;x&#125;$</span><br><span class="line">$ \widetilde&#123;xyz&#125;$</span><br></pre></td></tr></table></figure>

<p>$ \tilde{x}$<br>$ \widetilde{xyz}$</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \dot&#123;x&#125;$</span><br></pre></td></tr></table></figure>

<p>$ \dot{x}$</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \hat&#123;x&#125;$ </span><br><span class="line">$ \widehat&#123;xyz&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Chat%7Bx%7D" alt="\hat{x}"><br> <img src="https://math.jianshu.com/math?formula=%5Cwidehat%7Bxyz%7D" alt="\widehat{xyz}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \acute&#123;x&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cacute%7Bx%7D" alt="\acute{x}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \grave&#123;x&#125; $</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cgrave%7Bx%7D" alt="\grave{x}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \mathring&#123;x&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cmathring%7Bx%7D" alt="\mathring{x}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \ddot&#123;x&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cddot%7Bx%7D" alt="\ddot{x}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \check&#123;x&#125; $</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Ccheck%7Bx%7D" alt="\check{x}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \breve&#123;x&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbreve%7Bx%7D" alt="\breve{x}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \dddot&#123;x&#125; $</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cdddot%7Bx%7D" alt="\dddot{x}"></p>
<ol>
<li>编号</li>
</ol>
<blockquote>
<p>插入编号：<br> 使用\tag指令指定公式的具体编号，并使用\label指令埋下锚点。如y=x^2 \tag{1.5a}</p>
</blockquote>
<p><img src="https://math.jianshu.com/math?formula=y%3Dx%5E2%20%5Ctag%7B1.5a%7D" alt="y=x^2 \tag{1.5a}"></p>
<blockquote>
<p>引用编号：<br> 在markdown中不支持编号的锚点设置 \label与\ref 的使用</p>
</blockquote>
<ol>
<li>括号及嵌套</li>
</ol>
<p>常用括号有以下几种</p>
<p><img src="/2020/04/07/a/9368615-9db47069b8031901.webp" alt="img"></p>
<p>image.png</p>
<blockquote>
<p>括号的大小调整</p>
</blockquote>
<p>对括号的大小，手动模式可以用\big, \Big, \bigg, \Bigg等一系列命令(从小到大，默认是最小)放在上述括号前面调整大小。</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\Bigg( \bigg( \Big( \big((x) \big) \Big) \bigg) \Bigg)$</span><br><span class="line">$\Bigg\&#123; \bigg\&#123; \Big\&#123; \big\&#123;\&#123;x\&#125; \big\&#125; \Big\&#125; \bigg\&#125; \Bigg\&#125;$</span><br></pre></td></tr></table></figure>


<p>自动模式下要用 \left 和 \right 命令后面跟上所需分隔符，用来创建自动匹配高度的 (圆括号)，[方括号] 和 {花括号} 等分隔符</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$ f(x,y,z) = <span class="number">3</span>y^<span class="number">2</span>z \left( <span class="number">3</span>+\frac&#123;<span class="number">7</span>x+<span class="number">5</span>&#125;&#123;<span class="number">1</span>+y^<span class="number">2</span>&#125; \right) $$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=f(x%2Cy%2Cz)%20%3D%203y%5E2z%20%5Cleft(%203%2B%5Cfrac%7B7x%2B5%7D%7B1%2By%5E2%7D%20%5Cright)" alt="f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right)"></p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">f\<span class="keyword">left</span>(</span><br><span class="line">   \<span class="keyword">left</span>[ </span><br><span class="line">     \frac&#123;</span><br><span class="line">       <span class="number">1</span>+\<span class="keyword">left</span>\&#123;x,y\<span class="keyword">right</span>\&#125;</span><br><span class="line">     &#125;&#123;</span><br><span class="line">       \<span class="keyword">left</span>(</span><br><span class="line">          \frac&#123;x&#125;&#123;y&#125;+\frac&#123;y&#125;&#123;x&#125;</span><br><span class="line">       \<span class="keyword">right</span>)</span><br><span class="line">       \<span class="keyword">left</span>(u+<span class="number">1</span>\<span class="keyword">right</span>)</span><br><span class="line">     &#125;+a</span><br><span class="line">   \<span class="keyword">right</span>]^&#123;<span class="number">3</span>/<span class="number">2</span>&#125;</span><br><span class="line">\<span class="keyword">right</span>)</span><br><span class="line">\tag&#123;<span class="number">1.2</span>&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<p>$$<br>f\left(<br>   \left[<br>     \frac{<br>       1+\left{x,y\right}<br>     }{<br>       \left(<br>          \frac{x}{y}+\frac{y}{x}<br>       \right)<br>       \left(u+1\right)<br>     }+a<br>   \right]^{3/2}<br>\right)<br>\tag{1.2}<br>$$</p>
<p> 如果你需要在不同的行显示对应括号，可以在每一行对应处使用 \left. 或 \right. 来放一个”影子”括号：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\<span class="keyword">begin</span>&#123;aligned&#125;</span><br><span class="line">a=&amp;\left(<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+  \cdots \right. \\</span><br><span class="line">&amp; \cdots+ \left. \infty-<span class="number">2</span>+\infty-<span class="number">1</span>+\infty\right)</span><br><span class="line">\<span class="keyword">end</span>&#123;aligned&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Baligned%7D%20a%3D%26%5Cleft(1%2B2%2B3%2B%20%5Ccdots%20%5Cright.%20%5C%5C%20%26%20%5Ccdots%2B%20%5Cleft.%20%5Cinfty-2%2B%5Cinfty-1%2B%5Cinfty%5Cright)%20%5Cend%7Baligned%7D" alt="\begin{aligned} a=&amp;\left(1+2+3+ \cdots \right. \\ &amp; \cdots+ \left. \infty-2+\infty-1+\infty\right) \end{aligned}"></p>
<p>而如果分隔符不在左右而在中间，为了能够格式对齐，要用\middle加分隔符表示</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">$<span class="type">P</span>=\<span class="keyword">left</span>(<span class="type">A</span>=<span class="number">2</span>\middle|\frac&#123;<span class="type">A</span>^<span class="number">2</span>&#125;&#123;<span class="type">B</span>&#125;&gt;<span class="number">4</span>\<span class="keyword">right</span>)$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=P%3D%5Cleft(A%3D2%5Cmiddle%7C%5Cfrac%7BA%5E2%7D%7BB%7D%3E4%5Cright)" alt="P=\left(A=2\middle|\frac{A^2}{B}&gt;4\right)"></p>
<ol>
<li>颜色设置</li>
</ol>
<p><img src="/2020/04/07/a/9368615-2fbc10b9e7ecae71.webp" alt="img"></p>
<p>image.png</p>
<ol>
<li>原文照排</li>
</ol>
<blockquote>
<p>LATEX 提供了 \verb 命令(一般用于在正文中插入较短的命令)来实现</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\verb<span class="params">|x^2|</span>\quad x^<span class="number">2</span>$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cverb%7Cx%5E2%7C%5Cquad%20x%5E2" alt="\verb|x^2|\quad x^2"></p>
<ol>
<li>删除线</li>
</ol>
<blockquote>
<p>在公式内使用 \require{cancel} 来允许 片段删除线 的显示。<br> 声明片段删除线后，使用 \cancel{字符}、\bcancel{字符}、\xcancel{字符} 和 \cancelto{字符} 来实现各种片段删除线效果。</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">\<span class="keyword">require</span>&#123;cancel&#125;\<span class="keyword">begin</span>&#123;array&#125;&#123;rl&#125;</span><br><span class="line">\verb<span class="params">|y+\cancel&#123;x&#125;|</span> &amp; y+\cancel&#123;x&#125;\\</span><br><span class="line">\verb<span class="params">|\cancel&#123;y+x&#125;|</span> &amp; \cancel&#123;y+x&#125;\\</span><br><span class="line">\verb<span class="params">|y+\bcancel&#123;x&#125;|</span> &amp; y+\bcancel&#123;x&#125;\\</span><br><span class="line">\verb<span class="params">|y+\xcancel&#123;x&#125;|</span> &amp; y+\xcancel&#123;x&#125;\\</span><br><span class="line">\verb<span class="params">|y+\cancelto&#123;0&#125;&#123;x&#125;|</span> &amp; y+\cancelto&#123;<span class="number">0</span>&#125;&#123;x&#125;\\</span><br><span class="line">\verb+\frac&#123;<span class="number">1</span>\cancel9&#125;&#123;\cancel95&#125; = \frac15+&amp; \frac&#123;<span class="number">1</span>\cancel9&#125;&#123;\cancel95&#125; = \frac15 \\</span><br><span class="line">\<span class="keyword">end</span>&#123;array&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Crequire%7Bcancel%7D%5Cbegin%7Barray%7D%7Brl%7D%20%5Cverb%7Cy%2B%5Ccancel%7Bx%7D%7C%20%26%20y%2B%5Ccancel%7Bx%7D%5C%5C%20%5Cverb%7C%5Ccancel%7By%2Bx%7D%7C%20%26%20%5Ccancel%7By%2Bx%7D%5C%5C%20%5Cverb%7Cy%2B%5Cbcancel%7Bx%7D%7C%20%26%20y%2B%5Cbcancel%7Bx%7D%5C%5C%20%5Cverb%7Cy%2B%5Cxcancel%7Bx%7D%7C%20%26%20y%2B%5Cxcancel%7Bx%7D%5C%5C%20%5Cverb%7Cy%2B%5Ccancelto%7B0%7D%7Bx%7D%7C%20%26%20y%2B%5Ccancelto%7B0%7D%7Bx%7D%5C%5C%20%5Cverb%2B%5Cfrac%7B1%5Ccancel9%7D%7B%5Ccancel95%7D%20%3D%20%5Cfrac15%2B%26%20%5Cfrac%7B1%5Ccancel9%7D%7B%5Ccancel95%7D%20%3D%20%5Cfrac15%20%5C%5C%20%5Cend%7Barray%7D" alt="\require{cancel}\begin{array}{rl} \verb|y+\cancel{x}| &amp; y+\cancel{x}\\ \verb|\cancel{y+x}| &amp; \cancel{y+x}\\ \verb|y+\bcancel{x}| &amp; y+\bcancel{x}\\ \verb|y+\xcancel{x}| &amp; y+\xcancel{x}\\ \verb|y+\cancelto{0}{x}| &amp; y+\cancelto{0}{x}\\ \verb+\frac{1\cancel9}{\cancel95} = \frac15+&amp; \frac{1\cancel9}{\cancel95} = \frac15 \\ \end{array}"></p>
<h3 id="数学公式高级规则"><a href="#数学公式高级规则" class="headerlink" title="数学公式高级规则"></a>数学公式高级规则</h3><ol>
<li>公式环境与对齐<br> 在下文的公式环境中，形如 equation<em>中， 带</em>号的不将公式标号排出来, 而不带*的自动给每行式子编排标号<br> latex的公式环境有很多种，这里只列举我常用的，更多请查阅latex官方说明</li>
</ol>
<blockquote>
<p>单行公式环境 equation<br> \begin{equation}<br> …<br> \end{equation}<br> 是最一般的公式环境，表示一个公式，默认情况下之表示一个单行的公式，但是它的功能可以通过内嵌各种其他环境进行扩展，不可以使用\与&amp;功能。它可以内嵌的一些关于对齐的环境将在后面介绍。</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">begin</span>&#123;equation&#125;</span><br><span class="line">f(x)=<span class="number">3</span>x^&#123;<span class="number">2</span>&#125;+<span class="number">6</span>(x-<span class="number">2</span>)-<span class="number">1</span></span><br><span class="line">\<span class="keyword">end</span>&#123;equation&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bequation%7D%20f(x)%3D3x%5E%7B2%7D%2B6(x-2)-1%20%5Cend%7Bequation%7D" alt="\begin{equation} f(x)=3x^{2}+6(x-2)-1 \end{equation}"></p>
<blockquote>
<p>align（多个公式）<br> 这是最基本的对齐环境，其他多公式环境都不同程度地依赖它。它采用“&amp;”分割各个对齐单元，使用“\”换行。它的每行是一个公式，都会独立编号。在排版过程中，它将&amp;分出来的列又分成组，组间特定方式排版，具体方式在flalign环境中讨论。<br> 通常情况下在公式中可以通过\tag设置标号，\label设置引用名称，但好像简书的markdown不支持\label，所以编号的意义就无所谓了。</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">begin</span>&#123;align&#125;</span><br><span class="line"> f(x) &amp;= (x+a)(x+b) \\</span><br><span class="line"> &amp;= x^<span class="number">2</span> + (a+b)x + ab \tag&#123;<span class="number">1.1</span>&#125;</span><br><span class="line">\<span class="keyword">end</span>&#123;align&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Balign%7D%20f(x)%20%26%3D%20(x%2Ba)(x%2Bb)%20%5C%5C%20%26%3D%20x%5E2%20%2B%20(a%2Bb)x%20%2B%20ab%20%5Ctag%7B1.1%7D%20%5Cend%7Balign%7D" alt="\begin{align} f(x) &amp;= (x+a)(x+b) \\ &amp;= x^2 + (a+b)x + ab \tag{1.1} \end{align}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">begin</span>&#123;align&#125;</span><br><span class="line">A<span class="number">_</span>&#123;<span class="number">1</span>&#125;&amp;=B<span class="number">_</span>&#123;<span class="number">1</span>&#125;B<span class="number">_</span>&#123;<span class="number">2</span>&#125; &amp; A<span class="number">_</span>&#123;<span class="number">3</span>&#125; &amp; = B<span class="number">_</span>&#123;<span class="number">1</span>&#125;\\</span><br><span class="line">A<span class="number">_</span>&#123;<span class="number">2</span>&#125;&amp;=B<span class="number">_</span>&#123;<span class="number">3</span>&#125;&amp; A<span class="number">_</span>&#123;<span class="number">3</span>&#125;A<span class="number">_</span>&#123;<span class="number">4</span>&#125; &amp; = B<span class="number">_</span>&#123;<span class="number">4</span>&#125;</span><br><span class="line">\<span class="keyword">end</span>&#123;align&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Balign%7D%20A_%7B1%7D%26%3DB_%7B1%7DB_%7B2%7D%20%26%20A_%7B3%7D%20%26%20%3D%20B_%7B1%7D%5C%5C%20A_%7B2%7D%26%3DB_%7B3%7D%26%20A_%7B3%7DA_%7B4%7D%20%26%20%3D%20B_%7B4%7D%20%5Cend%7Balign%7D" alt="\begin{align} A_{1}&amp;=B_{1}B_{2} &amp; A_{3} &amp; = B_{1}\\ A_{2}&amp;=B_{3}&amp; A_{3}A_{4} &amp; = B_{4} \end{align}"></p>
<blockquote>
<p>公式组环境flalign与align的功能基本相同，唯一区别是列对之间的距离为弹性宽度，以使公式组两端对齐。然而简书不支持。。。</p>
</blockquote>
<blockquote>
<p>gather环境<br> 它是最简单的多行公式环境，自己不提供任何对齐。其中的各行公式按照全局方式分别对齐。<br> 在设置了全局左对齐之后，因为不存在内部各个公式之间对排版的干扰，这种环境非常适合写数学推导或者证明。而默认情况下，是居中对齐。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">\begin&#123;gather*&#125;</span><br><span class="line">E(X)=\<span class="keyword">lambda</span>    \qquad  D(X)=\<span class="keyword">lambda</span>    \\</span><br><span class="line">E(\bar&#123;X&#125;)=\<span class="keyword">lambda</span>  \\</span><br><span class="line">D(\bar&#123;X&#125;)=\frac&#123;\<span class="keyword">lambda</span>&#125;&#123;n&#125;    \\</span><br><span class="line">E(S^<span class="number">2</span>)=\frac&#123;n<span class="number">-1</span>&#125;&#123;n&#125;\<span class="keyword">lambda</span> \\</span><br><span class="line">\end&#123;gather*&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bgather%7D%20%5Cbecause%20E(X)%3D%5Clambda%20%5Cqquad%20D(X)%3D%5Clambda%20%5C%5C%20%5Ctherefore%20E(%5Cbar%7BX%7D)%3D%5Clambda%20%5C%5C%20D(%5Cbar%7BX%7D)%3D%5Cfrac%7B%5Clambda%7D%7Bn%7D%20%5C%5C%20E(S%5E2)%3D%5Cfrac%7Bn-1%7D%7Bn%7D%5Clambda%20%5C%5C%20%5Cend%7Bgather%7D" alt="\begin{gather} \because E(X)=\lambda \qquad D(X)=\lambda \\ \therefore E(\bar{X})=\lambda \\ D(\bar{X})=\frac{\lambda}{n} \\ E(S^2)=\frac{n-1}{n}\lambda \\ \end{gather}"></p>
<blockquote>
<p>与上文中公式组类似的，长公式也有两种multline和split两种环境，分别对应不对齐与对齐。</p>
</blockquote>
<p>multline不支持“&amp;”分列。其首行左对齐，末行右对齐，其余各行分别按照全局方式对齐。<br> split也用于排版多行公式，但它与多行公式环境multline的区别主要是以下三点：</p>
<ul>
<li>用&amp;作为分列符，但至多两列；左列右对齐，右列左对齐，形成一个列对，可使多行公式关于某个符号垂直对齐。因此用它排版的多行公式更为整齐美观。如果不用分列符&amp;,所有公式行为一列，且全都与首行公式的右端对齐。</li>
<li>必须置于除multline环境之外的其它公式环境中。</li>
<li>自身并不生成公式序号，而是由外在公式环境提供，序号垂直居中。</li>
</ul>
<p>示例如下：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$\<span class="keyword">begin</span>&#123;multline&#125;</span><br><span class="line">x=a+b+c+&#123;&#125; \\</span><br><span class="line">d+e+f+g</span><br><span class="line">\<span class="keyword">end</span>&#123;multline&#125;$$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bmultline%7D%20x%3Da%2Bb%2Bc%2B%7B%7D%20%5C%5C%20d%2Be%2Bf%2Bg%20%5Cend%7Bmultline%7D" alt="\begin{multline} x=a+b+c+{} \\ d+e+f+g \end{multline}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$\<span class="keyword">begin</span>&#123;split&#125;</span><br><span class="line">x=&amp;a+b+c+&#123;&#125; \\</span><br><span class="line">&amp;d+e+f+g</span><br><span class="line">\<span class="keyword">end</span>&#123;split&#125;$$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bsplit%7D%20x%3D%26a%2Bb%2Bc%2B%7B%7D%20%5C%5C%20%26d%2Be%2Bf%2Bg%20%5Cend%7Bsplit%7D" alt="\begin{split} x=&amp;a+b+c+{} \\ &amp;d+e+f+g \end{split}"></p>
<blockquote>
<p>/gathered，/aligned。以上几种方程组环境，无论每个公式多小，都会占满一行。而/gathered，/aligned环境，则只占据公式的实际宽度，整体作为一个特大的符号与其他符号一同处理。<br> 这个结构还可以添加位置参数，以决定与其他符号的竖直对齐方式(b,t)。而且这种环境不再具有自动编号功能。</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">begin</span>&#123;equation&#125;</span><br><span class="line"> \left.\<span class="keyword">begin</span>&#123;aligned&#125;</span><br><span class="line">        B<span class="string">'&amp;=-\partial \times E,\\</span></span><br><span class="line"><span class="string">        E'</span>&amp;=\partial \times B - <span class="number">4</span>\pi j,</span><br><span class="line">       \<span class="keyword">end</span>&#123;aligned&#125;</span><br><span class="line"> \right\&#125;</span><br><span class="line"> \qquad \text&#123;Maxwell<span class="string">'s equations&#125;</span></span><br><span class="line"><span class="string">\end&#123;equation&#125;</span></span><br><span class="line"><span class="string">$</span></span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bequation%7D%20%5Cleft.%5Cbegin%7Baligned%7D%20B'%26%3D-%5Cpartial%20%5Ctimes%20E%2C%5C%5C%20E'%26%3D%5Cpartial%20%5Ctimes%20B%20-%204%5Cpi%20j%2C%20%5Cend%7Baligned%7D%20%5Cright%5C%7D%20%5Cqquad%20%5Ctext%7BMaxwell's%20equations%7D%20%5Cend%7Bequation%7D" alt="\begin{equation} \left.\begin{aligned} B&#39;&amp;=-\partial \times E,\\ E&#39;&amp;=\partial \times B - 4\pi j, \end{aligned} \right\} \qquad \text{Maxwell&#39;s equations} \end{equation}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">begin</span>&#123;equation&#125;</span><br><span class="line">\left.</span><br><span class="line">\<span class="keyword">begin</span>&#123;aligned&#125;</span><br><span class="line">x+y &amp;&gt; <span class="number">5</span> \\</span><br><span class="line">y-y &amp;&gt; <span class="number">11</span></span><br><span class="line">\<span class="keyword">end</span>&#123;aligned&#125;</span><br><span class="line">\ \right\&#125;\Rightarrow x^<span class="number">2</span> - y^<span class="number">2</span> &gt; <span class="number">55</span></span><br><span class="line">\<span class="keyword">end</span>&#123;equation&#125;$</span><br></pre></td></tr></table></figure>

<p>$\begin{equation}<br>\left.<br>\begin{aligned}<br>x+y &amp;&gt; 5 \<br>y-y &amp;&gt; 11<br>\end{aligned}<br>\ \right}\Rightarrow x^2 - y^2 &gt; 55<br>\end{equation}$</p>
<blockquote>
<p>cases环境常用于分段函数，上面的环境虽然支持分段函数形式的表达，但比较繁琐</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">L(Y,f(X))=</span><br><span class="line">\<span class="keyword">begin</span>&#123;cases&#125;</span><br><span class="line"><span class="number">1</span>,\quad &amp;Y\neq f(X)\\</span><br><span class="line"><span class="number">0</span>,\quad &amp;Y=f(X)</span><br><span class="line">\<span class="keyword">end</span>&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<p>$$<br>L(Y,f(X))=<br>\begin{cases}<br>1,\quad &amp;Y\neq f(X)\<br>0,\quad &amp;Y=f(X)<br>\end{cases}<br>$$</p>
<blockquote>
<p>阵列环境 array可以帮助我们输入一个数组或表格<br> 通常，一个格式化后的表格比单纯的文字或排版后的文字更具有可读性。数组和表格均以 begin{array} 开头，并在其后定义列数及每一列的文本对齐属性，字母c l r 分别代表居中、左对齐及右对齐。若需要插入垂直分割线，在定义式中插入 | ，若要插入水平分割线，在下一行输入前插入 \hline 。与矩阵相似，每行元素间均须要插入 &amp; ，每行元素以 \ 结尾，最后以 end{array} 结束数组。下面是几个示例：</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">begin</span>&#123;array&#125;&#123;c<span class="params">|l|</span>c<span class="params">|r&#125;</span></span><br><span class="line"><span class="params">n &amp; \text&#123;左对齐&#125; &amp; \text&#123;居中对齐&#125; &amp; \text&#123;右对齐&#125; \\</span></span><br><span class="line"><span class="params">\hline</span></span><br><span class="line"><span class="params">1 &amp; 0.24 &amp; 1 &amp; 125 \\</span></span><br><span class="line"><span class="params">\hline</span></span><br><span class="line"><span class="params">2 &amp; -1 &amp; 189 &amp; -8 \\</span></span><br><span class="line"><span class="params">\hline</span></span><br><span class="line"><span class="params">3 &amp; -20 &amp; 2000 &amp; 1+10i</span></span><br><span class="line"><span class="params">\<span class="keyword">end</span>&#123;array&#125;$</span></span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Barray%7D%7Bc%7Cl%7Cc%7Cr%7D%20n%20%26%20%5Ctext%7B%E5%B7%A6%E5%AF%B9%E9%BD%90%7D%20%26%20%5Ctext%7B%E5%B1%85%E4%B8%AD%E5%AF%B9%E9%BD%90%7D%20%26%20%5Ctext%7B%E5%8F%B3%E5%AF%B9%E9%BD%90%7D%20%5C%5C%20%5Chline%201%20%26%200.24%20%26%201%20%26%20125%20%5C%5C%20%5Chline%202%20%26%20-1%20%26%20189%20%26%20-8%20%5C%5C%20%5Chline%203%20%26%20-20%20%26%202000%20%26%201%2B10i%20%5Cend%7Barray%7D" alt="\begin{array}{c|l|c|r} n &amp; \text{左对齐} &amp; \text{居中对齐} &amp; \text{右对齐} \\ \hline 1 &amp; 0.24 &amp; 1 &amp; 125 \\ \hline 2 &amp; -1 &amp; 189 &amp; -8 \\ \hline 3 &amp; -20 &amp; 2000 &amp; 1+10i \end{array}"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\left(\<span class="keyword">begin</span>&#123;array&#125;&#123;ccc<span class="params">|c&#125;</span></span><br><span class="line"><span class="params"> a11 &amp; a12 &amp; a13  &amp; b1 \\</span></span><br><span class="line"><span class="params">a21 &amp; a22  &amp; a23 &amp; b2  \\ </span></span><br><span class="line"><span class="params">a31 &amp; a32  &amp; a33 &amp; b3  \\</span></span><br><span class="line"><span class="params"> \<span class="keyword">end</span>&#123;array&#125;\right)$</span></span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cleft(%5Cbegin%7Barray%7D%7Bccc%7Cc%7D%20a11%20%26%20a12%20%26%20a13%20%26%20b1%20%5C%5C%20a21%20%26%20a22%20%26%20a23%20%26%20b2%20%5C%5C%20a31%20%26%20a32%20%26%20a33%20%26%20b3%20%5C%5C%20%5Cend%7Barray%7D%5Cright)" alt="\left(\begin{array}{ccc|c} a11 &amp; a12 &amp; a13 &amp; b1 \\ a21 &amp; a22 &amp; a23 &amp; b2 \\ a31 &amp; a32 &amp; a33 &amp; b3 \\ \end{array}\right)"></p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\left\&#123; </span><br><span class="line">\<span class="keyword">begin</span>&#123;array&#125;&#123;c&#125;</span><br><span class="line">a_1x+b_1y+c_1z=d_1 \\ </span><br><span class="line">a_2x+b_2y+c_2z=d_2 \\ </span><br><span class="line">a_3x+b_3y+c_3z=d_3</span><br><span class="line">\<span class="keyword">end</span>&#123;array&#125;</span><br><span class="line">\right. </span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<p>$$<br>\left{<br>\begin{array}{c}<br>a_1x+b_1y+c_1z=d_1 \<br>a_2x+b_2y+c_2z=d_2 \<br>a_3x+b_3y+c_3z=d_3<br>\end{array}<br>\right.<br>$$</p>
<ol>
<li>矩阵</li>
</ol>
<ul>
<li>第一种方式：使用matrix、pmatrix、bmatrix、Bmatrix、vmatrix或者Vmatrix，smallmatrix<br> 一个最基本的矩阵</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ \<span class="keyword">begin</span>&#123;matrix&#125;</span><br><span class="line"><span class="number">0</span> &amp; <span class="number">1</span> \\</span><br><span class="line"><span class="number">1</span> &amp; <span class="number">0</span> </span><br><span class="line">\<span class="keyword">end</span>&#123;matrix&#125; $</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bmatrix%7D%200%20%26%201%20%5C%5C%201%20%26%200%20%5Cend%7Bmatrix%7D" alt="\begin{matrix} 0 &amp; 1 \\ 1 &amp; 0 \end{matrix}"></p>
<p>可以看到矩阵中用 &amp; 分隔列，用 \ 分隔行，在矩阵开始和结束部分\begin和\end+矩阵类型<br> 下面给出这几种矩阵类型的图示</p>
<table>
<thead>
<tr>
<th>矩阵类型</th>
<th>矩阵图示</th>
</tr>
</thead>
<tbody><tr>
<td>matrix</td>
<td><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bmatrix%7D0%20%26%201%20%5C%5C1%20%26%200%20%5Cend%7Bmatrix%7D" alt="\begin{matrix}0 &amp; 1 \\1 &amp; 0 \end{matrix}"></td>
</tr>
<tr>
<td>pmatrix</td>
<td><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bpmatrix%7D0%20%26%201%20%5C%5C1%20%26%200%20%5Cend%7Bpmatrix%7D" alt="\begin{pmatrix}0 &amp; 1 \\1 &amp; 0 \end{pmatrix}"></td>
</tr>
<tr>
<td>bmatrix</td>
<td><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bbmatrix%7D0%20%26%201%20%5C%5C1%20%26%200%20%5Cend%7Bbmatrix%7D" alt="\begin{bmatrix}0 &amp; 1 \\1 &amp; 0 \end{bmatrix}"></td>
</tr>
<tr>
<td>Bmatrix</td>
<td><img src="https://math.jianshu.com/math?formula=%5Cbegin%7BBmatrix%7D0%20%26%201%20%5C%5C1%20%26%200%20%5Cend%7BBmatrix%7D" alt="\begin{Bmatrix}0 &amp; 1 \\1 &amp; 0 \end{Bmatrix}"></td>
</tr>
<tr>
<td>vmatrix</td>
<td><img src="https://math.jianshu.com/math?formula=%5Cbegin%7Bvmatrix%7D0%20%26%201%20%5C%5C1%20%26%200%20%5Cend%7Bvmatrix%7D" alt="\begin{vmatrix}0 &amp; 1 \\1 &amp; 0 \end{vmatrix}"></td>
</tr>
<tr>
<td>Vmatrix</td>
<td><img src="https://math.jianshu.com/math?formula=%5Cbegin%7BVmatrix%7D0%20%26%201%20%5C%5C1%20%26%200%20%5Cend%7BVmatrix%7D" alt="\begin{Vmatrix}0 &amp; 1 \\1 &amp; 0 \end{Vmatrix}"></td>
</tr>
<tr>
<td>smallmatrix</td>
<td><img src="https://math.jianshu.com/math?formula=(%5Cbegin%7Bsmallmatrix%7D%200%20%26%201%20%5C%5C%201%20%26%200%20%5Cend%7Bsmallmatrix%7D)" alt="(\begin{smallmatrix} 0 &amp; 1 \\ 1 &amp; 0 \end{smallmatrix})"></td>
</tr>
</tbody></table>
<p>在此之上，如果我们需要对矩阵起始和结束部分的括号进行变化，可以使用诸如</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\left\&#123;\<span class="keyword">begin</span>&#123;matrix&#125;</span><br><span class="line"> x_1&amp; x_2\\ </span><br><span class="line"> y_1&amp; y_2</span><br><span class="line">\<span class="keyword">end</span>&#123;matrix&#125;\right.$    (此处.作为占位符表示不需要分隔符)</span><br><span class="line">$\left.\<span class="keyword">begin</span>&#123;matrix&#125;</span><br><span class="line">x_1 &amp; x_2\\ </span><br><span class="line"> y_1&amp; y_2</span><br><span class="line">\<span class="keyword">end</span>&#123;matrix&#125;\right\&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Cleft%5C%7B%5Cbegin%7Bmatrix%7D%20x_1%26%20x_2%5C%5C%20y_1%26%20y_2%20%5Cend%7Bmatrix%7D%5Cright." alt="\left\{\begin{matrix} x_1&amp; x_2\\ y_1&amp; y_2 \end{matrix}\right."><br> <img src="https://math.jianshu.com/math?formula=%5Cleft.%5Cbegin%7Bmatrix%7D%20x_1%20%26%20x_2%5C%5C%20y_1%26%20y_2%20%5Cend%7Bmatrix%7D%5Cright%5C%7D" alt="\left.\begin{matrix} x_1 &amp; x_2\\ y_1&amp; y_2 \end{matrix}\right\}"></p>
<p>第二种方式就是使用array环境，在左右端加上所需括号即可</p>
<blockquote>
<p>输入带省略符号的矩阵</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">        \<span class="keyword">begin</span>&#123;pmatrix&#125;</span><br><span class="line">        <span class="number">1</span> &amp; a_1 &amp; a_1^<span class="number">2</span> &amp; \cdots &amp; a_1^n \\</span><br><span class="line">        <span class="number">1</span> &amp; a_2 &amp; a_2^<span class="number">2</span> &amp; \cdots &amp; a_2^n \\</span><br><span class="line">        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\</span><br><span class="line">        <span class="number">1</span> &amp; a_m &amp; a_m^<span class="number">2</span> &amp; \cdots &amp; a_m^n \\</span><br><span class="line">        \<span class="keyword">end</span>&#123;pmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<p>$$<br>\begin{pmatrix}<br>        1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>        1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>        1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>        \end{pmatrix}<br>$$</p>
<ol>
<li>交换图表</li>
</ol>
<blockquote>
<p>使用一行  \require{AMScd}  语句来允许交换图表的显示。<br> 声明交换图表后，语法与矩阵相似，在开头使用 begin{CD}，在结尾使用 end{CD}，在中间插入图表元素，每个元素之间插入 &amp; ，并在每行结尾处使用 \ 。</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">require</span>&#123;AMScd&#125;</span><br><span class="line">\<span class="keyword">begin</span>&#123;CD&#125;</span><br><span class="line">    A @&gt;a&gt;&gt; B\\</span><br><span class="line">    @V b V V\<span class="comment"># <span class="doctag">@VV</span> c V\\</span></span><br><span class="line">    C @&gt;&gt;d&gt; D</span><br><span class="line">\<span class="keyword">end</span>&#123;CD&#125;$</span><br></pre></td></tr></table></figure>

<p><img src="https://math.jianshu.com/math?formula=%5Crequire%7BAMScd%7D%20%5Cbegin%7BCD%7D%20A%20%40%3Ea%3E%3E%20B%5C%5C%20%40V%20b%20V%20V%5C%23%20%40VV%20c%20V%5C%5C%20C%20%40%3E%3Ed%3E%20D%20%5Cend%7BCD%7D" alt="\require{AMScd} \begin{CD} A @&gt;a&gt;&gt; B\\ @V b V V\# @VV c V\\ C @&gt;&gt;d&gt; D \end{CD}"><br> 其中，@&gt;&gt;&gt; 代表右箭头、@&lt;&lt;&lt; 代表左箭头、@VVV 代表下箭头、@AAA 代表上箭头、@= 代表水平双实线、@| 代表竖直双实线、@.代表没有箭头。<br> 在 @&gt;&gt;&gt; 的 &gt;&gt;&gt; 之间任意插入文字即代表该箭头的注释文字。</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$\<span class="keyword">begin</span>&#123;CD&#125;</span><br><span class="line">    A @&gt;&gt;&gt; B @&gt;&#123;\text&#123;very long label&#125;&#125;&gt;&gt; C \\</span><br><span class="line">    @. @AAA @<span class="params">| \\</span></span><br><span class="line"><span class="params">    D @= E @&lt;&lt;&lt; F</span></span><br><span class="line"><span class="params">\<span class="keyword">end</span>&#123;CD&#125;$</span></span><br></pre></td></tr></table></figure>

<p>$\begin{CD}<br>    A @&gt;&gt;&gt; B @&gt;{\text{very long label}}&gt;&gt; C \<br>    @. @AAA @| \<br>    D @= E @&lt;&lt;&lt; F<br>\end{CD}$</p>
<p>以上内容大致上应该能把绝大多数数学公式优美的书写下来了，更多内容还需要自行查阅官方说明~~</p>
<p>作者：古剑诛仙<br>链接：<a href="https://www.jianshu.com/p/22117d964baf" target="_blank" rel="noopener">https://www.jianshu.com/p/22117d964baf</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>公式</tag>
      </tags>
  </entry>
  <entry>
    <title>日志——2020年4月10日</title>
    <url>/2020/04/10/%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">输入密码，查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="ef3662ba4bd09a11df5fb024dbca396c47c1f0878e921a79de53dd42db1a926d">767c15ce3e30781cb300177b779719b806631c1ea802be9cdf644976137313ec2bb453f1c199701ccfb9abc564cfabd8697cc324e4c782bc0376bf387b99ec819eb7cdb254da5b9aaa45901b8cff0498fa1e3e0f8f737b1822f22b8179fc45e1308da3b9e846f2e08290874026c1d05b49f947f7c319f5ef1d75adbf30b4dfc06cb6a00ceb32b333bfa5e1286e38deff6cbfaa599be22ab2ba44c9a0d9cb59b45ee6a61e016705d58d6522ecade0d2882fef0d006d766db11be86347ed3ce2e8f38c7691252060c112681417216ae5a0461e8f1d2732750efaa921b438f7a346da2d0bdd5fcdc442141cfd26cc591396461ccc4a2c6fb3e08e3c25dddf239a83744d71299470e40696211991a55a49768c685f1279c5f65b935b762816217ebe252816e2e2e2231f68209b2ffd218bb0f695d7756fe292a09cfe8c216988d6e6d9a98d605fd8fe512632e37c4558f22403daf1d98f248eac2fe8ddf39846a144340398439b784f5bad54bb8e4a3471c9626030ab63ddb852bb923efde28506a58f5f356346b1a63030eb4b0e3d9899434ef1b5a6443046c27ee5e1323967152094e0c8a67d987db002914696fa2cedc0207b8dc780a58af2febb2ea55b589a4d49a4316e59fd18b72da9d156f1978a235ffdae072a524f3553f952f02233b0d28d345c89569aa27054b7fa23ba033fc3e634cd848a5588565d78da1381ea2660c51099e20782c02bf327e05f1ae5fa0c16bfa6961538e8b1df6870635e548db4de96b305a7363c164d65f9a33c233d57dacebd52ed2f283498abb3d353a0dd0bab6c09c1b4f52a7435b107d04dc5162e71c913d5b4b5f5c94bae9661e9ef50136f4415b6a3243600f6851a2db1d8dabac88a610584b741c8bfff1bd8777a515e1fb249658d4aac7105cc4ee0737522e586e0fe510b0792dab926f5dfb4dd8bb3d55d51ed403aec79eed6aa7d4b01d770a9a4a8702a67284248d0d41cb980a09250b5aa467cbd0032cefb701f91f95ca01fb4cfdc7bf73d6b8da3fb1b67be2fee672f56b3dce2cf5827b724f40f59573eae7080204f7edb7d22a59b0d2a0c8a557085be1525556ebf9617700c7fdb7c57c5363c332a5e2c5216154c2dfea0077918dd883b6f581f468ce3dd497ed5816bdda8cd2385f3743b3ebd756baaa4ae5575edece8725998885fba62fd22c931163c4aeaf612950baa6fca5a0fe0bc6c69de43e875f78117709de21c6924f2d93fb33f0a6e11144b4d31a5a671958f79a961a414c40b7e3491ee8680228f1470b61c8b69852d17ab18471583ed8c145b5990a9594c660a25ef19a11af04c9573c4662688152a6ee2794e35c397656050072190a69b50bd6d1b43014bfac9fcfb041bbd519d8f193e48aeb0d547865c4127156b9aa75d15d6b763570dc3553c1a036c28633c6c4d41e720a1b1b31bd04f2218fb33b7a7b54288135d2572f53ba63e323c96cdb9df567b14be0009a94385321e089940ee8ddfd4f9b379e8c2a69b3da5d5ee58997928b11e59571cdc21f9a4e3604f8355613d84afc6df9af845d198be25dc4860f4d46ff695a007b248056366cda1ba06c3f2d2109ea04e8502eca02b5e29155985ae68ee6db087e8404f9e2ed5651edc81cf603ee61a59343a7fb8a5c0ff13e7862b7fcf46e871ca4e53b9439ea579342d659c633da4c8af4f9d0cbe7fb3ea3ae1e053709fdcaf75fbf8ad14e2c170716d7c7d20e60619131726ae</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>flag</tag>
        <tag>logs</tag>
      </tags>
  </entry>
  <entry>
    <title>20200411-日志</title>
    <url>/2020/04/11/20200411/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">加密，请输入密码</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="43fb7028f43293560867a8c8939e57470dd68ca2262df634f1ec5878e1dec7a5">767c15ce3e30781cb300177b779719b8972d15bc9865e0ea2fb60b5a644d6e22c0adb5395426a82f52d1a8e2f21bc8cea56173cc6a8ccc62b70545370102c1ef5caf536800e0065fa09fc3c7c5e0143e5a3badd90f5c8d31b9c261df3e5b0deccfd49b8405c10be68554e611f3ecbd45d4e548bed9b6c41d4262294eb887e6d36b2e44bccdd95150b642b27cf01d5d5756c6d536159e52ce16c5d19862db81acd4b94c4d5b18af3d11fdaef2f2e26212b8bfbd1a3479e702acedc63ca7386e714e0b58316a530b22c7ef0538b375c0738e22024ed5e44b45ac8b58724051cbfc0e488a7c5e13cfceadc2a3752b7eaea98c7b698be56305ab66fdba9af5f5740eca180961406622296a8ae9d3c163da93f44d21765682ac0e7457bd25a3e7fd486b9321bd3ac16dbeb995e819919058b3a2e5978a9193b7b5d9b0abdcfee2769f66b78621fe30f07713112a79d8f5de9cccda11c2ef66bbc7c5e43e5f94578b9a67f708f39d26306f80184c2833e2e06ea5f76506ecb0343d45bcdae9584439fcd05c0527524175af1957b9f492a64fdc1e55ccb2ae51c0471b889cd9f72ef9c22e2e94959e99ebec7451377be8b51a0aaef11499e69cdd61aaa4341758ae0b6219a7fe41477685e671566ca29765c52a217a20df47f106d48842a0af97bf0d9f990f0998ebb20af773d319650bc94015e0a8bc4670a09f5f01051cda1c3be788c60b5de6ccfe56ba96b5304ba93cf44af123b1046504b902445ca63da27b2476d52834f70ec95c25aa6646a1db1e318bf2868d8dd3c2b389e3529c03bc497666db24cfae3af304327632fce8c308cd8319e7e47894d5fab9663aba7a79366e0448d038fd50344c7deae536a5b4388520b9553263ab43a45200701b0b9b02814e58996c19050adbe2126399970b8bb507e95be2804c12c6691cfad3dc547ab04fd15d60543a6c2ada93f511fa7133ad97</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>logs</category>
      </categories>
      <tags>
        <tag>logs</tag>
      </tags>
  </entry>
  <entry>
    <title>pytorch 学习</title>
    <url>/2020/05/02/pytorch_learning/</url>
    <content><![CDATA[<h3 id="pytorch-学习"><a href="#pytorch-学习" class="headerlink" title="pytorch 学习"></a>pytorch 学习</h3><h4 id="1-pytorch的优点"><a href="#1-pytorch的优点" class="headerlink" title="1. pytorch的优点"></a>1. pytorch的优点</h4><pre><code>自动微分
集成常用函数
拥有数据处理函数
多精度训练</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">torch.manual_seed(<span class="number">466</span>)</span><br><span class="line">np.random.seed(<span class="number">466</span>)</span><br></pre></td></tr></table></figure>

<h4 id="numpy-ndarray-与-pytorch-Tensors-之间的联系"><a href="#numpy-ndarray-与-pytorch-Tensors-之间的联系" class="headerlink" title="numpy ndarray 与 pytorch Tensors 之间的联系"></a>numpy ndarray 与 pytorch Tensors 之间的联系</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x_numpy = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">x_torch = torch.tensor([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'x_numpy,  x_torch'</span>)</span><br><span class="line">print(x_numpy,x_torch)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure>

<pre><code>x_numpy,  x_torch
[1 2 3] tensor([1, 2, 3])</code></pre><p>​    </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">'numpy 与 torch 之间的转化'</span>)</span><br><span class="line">print(torch.from_numpy(x_numpy),x_torch.numpy())</span><br><span class="line">print()</span><br></pre></td></tr></table></figure>

<pre><code>numpy 与 torch 之间的转化
tensor([1, 2, 3], dtype=torch.int32) [1 2 3]</code></pre><p>​    </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运算操作</span></span><br><span class="line">y_numpy = np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">y_torch = torch.tensor([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">print(<span class="string">'x+y'</span>)</span><br><span class="line">print(x_numpy+y_numpy,x_torch+y_torch)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure>

<pre><code>x+y
[3 5 7] tensor([3, 5, 7])</code></pre><p>​    </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">"mean along the 0th dimension"</span>)</span><br><span class="line">x_numpy = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4.</span>]])</span><br><span class="line">x_torch = torch.tensor([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4.</span>]])</span><br><span class="line">print(np.mean(x_numpy, axis=<span class="number">0</span>), torch.mean(x_torch, dim=<span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<pre><code>mean along the 0th dimension
[2. 3.] tensor([2., 3.])</code></pre><h4 id="Tensor-view-用于reshape-tensor"><a href="#Tensor-view-用于reshape-tensor" class="headerlink" title="Tensor.view 用于reshape tensor"></a>Tensor.view 用于reshape tensor</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N,C,W,H = <span class="number">10</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span></span><br><span class="line">X = torch.randn(N,C,W,H)</span><br><span class="line"></span><br><span class="line">print(X.shape)</span><br><span class="line">print(X.view(N,C,<span class="number">5</span>*<span class="number">5</span>).shape)</span><br><span class="line">print(X.view(<span class="number">-1</span>,C,<span class="number">5</span>*<span class="number">5</span>).shape)</span><br></pre></td></tr></table></figure>

<pre><code>torch.Size([10, 3, 5, 5])
torch.Size([10, 3, 25])
torch.Size([10, 3, 25])</code></pre><h3 id="计算图"><a href="#计算图" class="headerlink" title="计算图"></a>计算图</h3><p>What’s special about PyTorch’s tensor object is that it implicitly creates a computation graph in the background. A computation graph is a a way of writing a mathematical expression as a graph. There is an algorithm to compute the gradients of all the variables of a computation graph in time on the same order it is to compute the function itself.</p>
<p>Consider the expression  𝑒=(𝑎+𝑏)∗(𝑏+1)  with values  𝑎=2,𝑏=1 . We can draw the evaluated computation graph as</p>
<p>In PyTorch, we can write this as<br><img src="/2020/05/02/pytorch_learning/tree-eval.png" alt="image.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = torch.tensor(<span class="number">2.0</span>,requires_grad=<span class="literal">True</span>) <span class="comment"># requires_grad 自动微分参数</span></span><br><span class="line">b = torch.tensor(<span class="number">1.0</span>,requires_grad=<span class="literal">False</span>) <span class="comment"># 输入False不自动计算计算图</span></span><br><span class="line">c = a+b</span><br><span class="line">d = b+<span class="number">1</span></span><br><span class="line">e = c*d</span><br><span class="line">print(<span class="string">'c'</span>,c)</span><br><span class="line">print(<span class="string">'d'</span>,d)</span><br><span class="line">print(<span class="string">'e'</span>,e)</span><br></pre></td></tr></table></figure>

<pre><code>c tensor(3., grad_fn=&lt;AddBackward0&gt;)
d tensor(2.)
e tensor(6., grad_fn=&lt;MulBackward0&gt;)</code></pre><h3 id="PyTorch-的自动微分框架"><a href="#PyTorch-的自动微分框架" class="headerlink" title="PyTorch 的自动微分框架"></a>PyTorch 的自动微分框架</h3><p>Now that we have seen that PyTorch keeps the graph around for us, let’s use it to compute some gradients for us.</p>
<p>Consider the function  $ 𝑓(𝑥)=(𝑥−2)^2 $.</p>
<p>Q: Compute $\frac{d}{dx} f(x)$ and then compute $f’(1)$.</p>
<p>We make a <code>backward()</code> call on the leaf variable (<code>y</code>) in the computation, computing all the gradients of <code>y</code> at once.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (x<span class="number">-2</span>)**<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fp</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*(x<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line">x = torch.tensor([<span class="number">1.0</span>],requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">y = f(x)</span><br><span class="line">y.backward()  <span class="comment">#backward()用于计算表达式中的所有梯度</span></span><br><span class="line">print(<span class="string">'PyTorch 解为：'</span>,x.grad)</span><br><span class="line">z = f(x) * f(x**<span class="number">2</span>)</span><br><span class="line">z.backward()</span><br><span class="line">print(<span class="string">'微分解析解为：'</span>,fp(x))</span><br><span class="line">print(<span class="string">'PyTorch 解为：'</span>,x.grad)</span><br></pre></td></tr></table></figure>

<pre><code>PyTorch 解为： tensor([-2.])
微分解析解为： tensor([-2.], grad_fn=&lt;MulBackward0&gt;)
PyTorch 解为： tensor([-8.])</code></pre><p>It can also find gradients of functions.</p>
<p>Let $w = [w_1, w_2]^T$</p>
<p>Consider $g(w) = 2w_1w_2 + w_2\cos(w_1)$</p>
<p>Q: Compute $\nabla_w g(w)$ and verify $\nabla_w g([\pi,1]) = [2, \pi - 1]^T$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">(w)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*w[<span class="number">0</span>]*w[<span class="number">1</span>] + w[<span class="number">1</span>]*torch.cos(w[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grad_g</span><span class="params">(w)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> torch.tensor([<span class="number">2</span>*w[<span class="number">1</span>]-w[<span class="number">1</span>]*torch.sin(w[<span class="number">0</span>]),<span class="number">2</span>*w[<span class="number">0</span>]+torch.cos(w[<span class="number">0</span>])])</span><br><span class="line"></span><br><span class="line">w = torch.tensor([np.pi,<span class="number">1</span>],requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">z = g(w)</span><br><span class="line">z.backward()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'解析解：'</span>, grad_g(w))</span><br><span class="line">print(<span class="string">'Torch解：'</span>, w.grad)</span><br></pre></td></tr></table></figure>

<pre><code>解析解： tensor([2.0000, 5.2832])
Torch解： tensor([2.0000, 5.2832])</code></pre><h3 id="使用梯度"><a href="#使用梯度" class="headerlink" title="使用梯度"></a>使用梯度</h3><p>Now that we have gradients, we can use our favorite optimization algorithm: gradient descent!</p>
<p>Let $f$ the same function we defined above.<br>$ f = (x-2)^2 $</p>
<p>Q: What is the value of $x$ that minimizes $f$?</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">5.0</span>],requires_grad=<span class="literal">True</span>)</span><br><span class="line">step_size = <span class="number">0.4</span></span><br><span class="line">print(<span class="string">'iter,\tx,\tf(x),\tf\'(x),\tf\'(x) pytorch'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    y = f(x)</span><br><span class="line">    y.backward()</span><br><span class="line">    print(<span class="string">'&#123;&#125;,\t&#123;:.3f&#125;,\t&#123;:.3f&#125;,\t&#123;:.3f&#125;,\t&#123;:.3f&#125;'</span>.format(i, x.item(), f(x).item(), fp(x).item(), x.grad.item()))</span><br><span class="line">    </span><br><span class="line">    x.data = x.data - step_size * x.grad</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#需要把grad值归零，不归零的话 y 的值会累积</span></span><br><span class="line">    x.grad.detach_() <span class="comment"># 为了提高效率</span></span><br><span class="line">    x.grad.zero_()</span><br></pre></td></tr></table></figure>

<pre><code>iter,    x,    f(x),    f&apos;(x),    f&apos;(x) pytorch
0,    5.000,    9.000,    6.000,    6.000
1,    2.600,    0.360,    1.200,    1.200
2,    2.120,    0.014,    0.240,    0.240
3,    2.024,    0.001,    0.048,    0.048
4,    2.005,    0.000,    0.010,    0.010
5,    2.001,    0.000,    0.002,    0.002
6,    2.000,    0.000,    0.000,    0.000
7,    2.000,    0.000,    0.000,    0.000
8,    2.000,    0.000,    0.000,    0.000
9,    2.000,    0.000,    0.000,    0.000</code></pre><h3 id="Linear-Regression"><a href="#Linear-Regression" class="headerlink" title="Linear Regression"></a>Linear Regression</h3><p>使用torch进行线性回归</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构造了一个线性带有噪音的data set</span></span><br><span class="line">d = <span class="number">2</span></span><br><span class="line">n = <span class="number">50</span></span><br><span class="line">X = torch.randn(n,d)</span><br><span class="line">true_w = torch.tensor([[<span class="number">-1.0</span>],[<span class="number">2.0</span>]])</span><br><span class="line">y = X @ true_w + torch.randn(n,<span class="number">1</span>)*<span class="number">0.1</span></span><br><span class="line">print(<span class="string">'X shape'</span>,X.shape)</span><br><span class="line">print(<span class="string">'y shape'</span>, y.shape)</span><br><span class="line">print(<span class="string">'w shape'</span>, true_w.shape)</span><br></pre></td></tr></table></figure>

<pre><code>X shape torch.Size([50, 2])
y shape torch.Size([50, 1])
w shape torch.Size([2, 1])</code></pre><h3 id="Note-dimensions"><a href="#Note-dimensions" class="headerlink" title="Note: dimensions"></a>Note: dimensions</h3><p>PyTorch does a lot of operations on batches of data. The convention is to have your data be of size $(N, d)$ where $N$ is the size of the batch of data.</p>
<h3 id="Sanity-check"><a href="#Sanity-check" class="headerlink" title="Sanity check"></a>Sanity check</h3><p>To verify PyTorch is computing the gradients correctly, let’s recall the gradient for the RSS objective:</p>
<p>$$\nabla_w \mathcal{L}_{RSS}(w; X) = \nabla_w\frac{1}{n} ||y - Xw||_2^2 = -\frac{2}{n}X^T(y-Xw)$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">model</span><span class="params">(X,w)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> X @ w</span><br><span class="line"></span><br><span class="line"><span class="comment"># norm 求的是矩阵范数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rss</span><span class="params">(y,y_hat)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> torch.norm(y-y_hat)**<span class="number">2</span>/n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 梯度解析解 @ 表示矩阵乘法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grad_rss</span><span class="params">(X,y,W)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-2</span>*X.t()@(y-X @ w)/n</span><br><span class="line"></span><br><span class="line">w = torch.tensor([[<span class="number">1.0</span>],[<span class="number">0</span>]],requires_grad=<span class="literal">True</span>)</span><br><span class="line">y_hat = model(X,w)</span><br><span class="line"></span><br><span class="line">loss = rss(y,y_hat)</span><br><span class="line">loss.backward()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Analytical gradient'</span>, grad_rss(X, y, w).detach().view(<span class="number">2</span>).numpy())</span><br><span class="line">print(<span class="string">'PyTorch\'s gradient'</span>, w.grad.view(<span class="number">2</span>).numpy())</span><br></pre></td></tr></table></figure>

<pre><code>Analytical gradient [ 4.474982 -3.335253]
PyTorch&apos;s gradient [ 4.4749813 -3.3352537]</code></pre><p>Now that we’ve seen PyTorch is doing the right think, let’s use the gradients!</p>
<h2 id="Linear-regression-using-GD-with-automatically-computed-derivatives"><a href="#Linear-regression-using-GD-with-automatically-computed-derivatives" class="headerlink" title="Linear regression using GD with automatically computed derivatives"></a>Linear regression using GD with automatically computed derivatives</h2><p>We will now use the gradients to run the gradient descent algorithm.</p>
<p>Note: This example is an illustration to connect ideas we have seen before to PyTorch’s way of doing things. We will see how to do this in the “PyTorchic” way in the next example.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">step_size = <span class="number">0.4</span></span><br><span class="line">print(<span class="string">'iter,\t loss,\t w'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    y_hat = model(X,w)</span><br><span class="line">    loss = rss(y,y_hat)</span><br><span class="line">    </span><br><span class="line">    loss.backward()</span><br><span class="line">    w.data = w.data - step_size * w.grad</span><br><span class="line">    print(<span class="string">'&#123;&#125;,\t&#123;:.2f&#125;,\t&#123;&#125;'</span>.format(i, loss.item(), w.view(<span class="number">2</span>).detach().numpy()))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># We need to zero the grad variable since the backward()</span></span><br><span class="line">    <span class="comment"># call accumulates the gradients in .grad instead of overwriting.</span></span><br><span class="line">    <span class="comment"># The detach_() is for efficiency. You do not need to worry too much about it.</span></span><br><span class="line">    w.grad.detach()</span><br><span class="line">    w.grad.zero_()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\ntrue w\t\t'</span>, true_w.view(<span class="number">2</span>).numpy())</span><br><span class="line">print(<span class="string">'estimated w\t'</span>, w.view(<span class="number">2</span>).detach().numpy())</span><br></pre></td></tr></table></figure>

<pre><code>iter,     loss,     w
0,    7.80,    [-2.5799851  2.668203 ]
1,    3.22,    [-1.1622744  2.2072678]
2,    0.08,    [-0.997594   2.0795758]
3,    0.02,    [-0.98061234  2.0375962 ]
4,    0.01,    [-0.97969574  2.022719  ]
5,    0.01,    [-0.9800115  2.0172987]
6,    0.01,    [-0.98020816  2.0153053 ]
7,    0.01,    [-0.98029053  2.0145698 ]
8,    0.01,    [-0.98032224  2.014298  ]
9,    0.01,    [-0.9803341  2.0141976]
10,    0.01,    [-0.98033845  2.0141604 ]
11,    0.01,    [-0.98034006  2.0141468 ]
12,    0.01,    [-0.98034066  2.0141418 ]
13,    0.01,    [-0.9803409  2.01414  ]
14,    0.01,    [-0.98034096  2.0141392 ]
15,    0.01,    [-0.980341  2.014139]
16,    0.01,    [-0.980341  2.014139]
17,    0.01,    [-0.980341  2.014139]
18,    0.01,    [-0.980341  2.014139]
19,    0.01,    [-0.980341  2.014139]

true w         [-1.  2.]
estimated w     [-0.980341  2.014139]</code></pre><h3 id="Neural-Network-Basics-in-PyTorch"><a href="#Neural-Network-Basics-in-PyTorch" class="headerlink" title="Neural Network Basics in PyTorch"></a>Neural Network Basics in PyTorch</h3><p>fitting a simple neural network to the data </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">d = <span class="number">1</span></span><br><span class="line">n = <span class="number">100</span></span><br><span class="line">X = torch.rand(n,d)</span><br><span class="line">y = <span class="number">4</span>* torch.sin(np.pi*X)*torch.cos(<span class="number">6</span>*np.pi*X**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">plt.scatter(X.numpy(),y.numpy())</span><br><span class="line">plt.title(<span class="string">'plot of $f(x)$'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'$x$'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'$y$'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>


<p><img src="/2020/05/02/pytorch_learning/output_25_0.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">step_size = <span class="number">0.05</span></span><br><span class="line">iter_times = <span class="number">12000</span></span><br><span class="line">n_hidden_1 = <span class="number">32</span></span><br><span class="line">n_hidden_2 = <span class="number">32</span></span><br><span class="line">d_out = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">neural_network = nn.Sequential(</span><br><span class="line">                                nn.Linear(d,n_hidden_1),</span><br><span class="line">                                nn.Tanh(),</span><br><span class="line">                                nn.Linear(n_hidden_1,n_hidden_2),</span><br><span class="line">                                nn.Tanh(),</span><br><span class="line">                                nn.Linear(n_hidden_2,d_out))</span><br><span class="line"></span><br><span class="line">loss_func = nn.MSELoss()</span><br><span class="line"></span><br><span class="line">optim = torch.optim.SGD(neural_network.parameters(),lr=step_size)</span><br><span class="line">print(<span class="string">'iter, \t loss'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(iter_times):</span><br><span class="line">    y_hat = neural_network(X)</span><br><span class="line">    loss = loss_func(y_hat,y)</span><br><span class="line">    optim.zero_grad()</span><br><span class="line">    loss.backward()</span><br><span class="line">    optim.step()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">1000</span> ==<span class="number">0</span> :</span><br><span class="line">        print(<span class="string">'&#123;&#125;,\t&#123;:.2f&#125;'</span>.format(i, loss.item()))</span><br></pre></td></tr></table></figure>

<pre><code>iter,      loss
0,    4.36
1000,    2.60
2000,    1.08
3000,    0.62
4000,    0.23
5000,    0.12
6000,    0.06
7000,    0.05
8000,    0.03
9000,    0.02
10000,    0.00
11000,    0.01</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X_grid = torch.from_numpy(np.linspace(<span class="number">0</span>,<span class="number">1</span>,<span class="number">50</span>)).float().view(<span class="number">-1</span>,d)</span><br><span class="line">y_hat = neural_network(X_grid)</span><br><span class="line">plt.scatter(X.numpy(), y.numpy())</span><br><span class="line">plt.plot(X_grid.detach().numpy(), y_hat.detach().numpy(), <span class="string">'r'</span>)</span><br><span class="line">plt.title(<span class="string">'plot of $f(x)$ and $\hat&#123;f&#125;(x)$'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'$x$'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'$y$'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>


<p><img src="/2020/05/02/pytorch_learning/output_27_0.png" alt="png"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>pytorch</tag>
        <tag>deeplearning</tag>
      </tags>
  </entry>
</search>
